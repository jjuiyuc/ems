stages:
  - test

variables:
  # Gitlab's cache does not work across builds - only across stages, which is useless for caching golang modules.
  # However, we can directly store our go modules in the cache volume
  GOPATH: "/cache/.go"

default:
  image: gcr.io/ubiik-hes-dev/der-ems-test-env:latest

backend-test-job:
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_LABELS =~ /Backend/'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_REF_NAME == "main"'
      when: manual
      allow_failure: true
  script:
    - export PATH="$GOPATH/bin:~/go/bin:$PATH"
    - /start.sh
    - cd backend/
    - cat scripts/der-ems.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou-holiday.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou-location.sql | mysql --user=ubiik --password=testing123 der_ems
    - make go-cover
    - go run github.com/t-yuki/gocover-cobertura < cover.out > coverage.xml
    - sed -i 's;filename=\"gitlab.com/ubiik/ems/der-ems/;filename=\";g' coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml
  coverage: '/\(statements\)(?:\s+)?(\d+(?:\.\d+)?%)/'