stages:
  - test
  - deploy

variables:
  # Gitlab's cache does not work across builds - only across stages, which is useless for caching golang modules.
  # However, we can directly store our go modules in the cache volume
  GOPATH: "/cache/.go"

default:
  image: gcr.io/ubiik-hes-dev/der-ems-test-env:latest

.ssh: &ssh
  ## https://docs.gitlab.com/ee/ci/ssh_keys/
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
  - eval $(ssh-agent -s)
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  - ssh-keyscan $SSH_HOST >> ~/.ssh/known_hosts
  - chmod 644 ~/.ssh/known_hosts

# Backend

backend-test-job:
  stage: test
  rules:
    - if: '$CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_LABELS =~ /Backend/'
      when: always
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" || $CI_COMMIT_REF_NAME == "main"'
      when: manual
      allow_failure: true
  script:
    - export PATH="$GOPATH/bin:~/go/bin:$PATH"
    - /start.sh
    - cd backend/
    - cat scripts/der-ems.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou-holiday.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-tou-location.sql | mysql --user=ubiik --password=testing123 der_ems
    - cat scripts/der-ems-group-type.sql | mysql --user=ubiik --password=testing123 der_ems
    - make go-cover
    - go run github.com/t-yuki/gocover-cobertura < cover.out > coverage.xml
    - sed -i 's;filename=\"gitlab.com/ubiik/ems/der-ems/;filename=\";g' coverage.xml
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: backend/coverage.xml
  coverage: '/\(statements\)(?:\s+)?(\d+(?:\.\d+)?%)/'

# Frontend

test-frontend:
  stage: test
  rules:
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" || $CI_COMMIT_REF_NAME == "main"
      changes:
        - frontend/**/*
      when: always
    - if: $CI_MERGE_REQUEST_TARGET_BRANCH_NAME != "main" && $CI_COMMIT_REF_NAME != "main"
      changes:
        - frontend/**/*
      when: manual
  before_script:
    - cd frontend/
    - yarn
  script:
    - yarn test --watchAll=false --ci --coverage --testResultsProcessor=\"jest-junit\"
  artifacts:
    reports:
      junit: frontend/junit.xml
    paths:
      - frontend/coverage/lcov-report
    expire_in: 6 mos
  allow_failure: true
  coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/

.deploy-frontend-template:
  stage: deploy
  before_script:
    - cd frontend/
    - *ssh
  artifacts:
    paths:
      - frontend/dist
    expire_in: 1 week
  when: manual
  script:
    - |
      if [[ "$HIDE_MID_PEAK" == "true" ]]; then
        printf "VITE_APP_VERSION=${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}" > .env;
      else
        printf "VITE_APP_VERSION=${CI_COMMIT_REF_NAME}-${CI_COMMIT_SHORT_SHA}\nVITE_APP_API_TOU_SHOW_FULL_SECTIONS=1" > .env;
      fi
    - less .env
    - yarn
    - yarn build
    - (cd ../cicd/ansible && ansible-playbook playbook.yml -i inventories/${CI_ENVIRONMENT_NAME} -e env=${CI_ENVIRONMENT_NAME} --tags=frontend)

deploy-frontend-dev:
  extends: .deploy-frontend-template
  environment: develop

deploy-frontend-prod:
  extends: .deploy-frontend-template
  environment: production