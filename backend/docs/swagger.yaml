basePath: /api
definitions:
  app.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  routers.PeriodQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - startTime
    type: object
  routers.ResolutionWithPeriodQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      resolution:
        enum:
        - day
        - month
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - resolution
    - startTime
    type: object
  routers.StartTimeQuery:
    properties:
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - startTime
    type: object
  routers.ZoomableQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      resolution:
        enum:
        - hour
        - 5minute
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - resolution
    - startTime
    type: object
  services.AccumulatedPowerStateResponse:
    properties:
      batteryLifetimeEnergyACDiffs:
        items:
          type: number
        type: array
      gridLifetimeEnergyACDiffs:
        items:
          type: number
        type: array
      loadConsumedLifetimeEnergyACDiffs:
        items:
          type: number
        type: array
      pvProducedLifetimeEnergyACDiffs:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryChargeVoltageStateResponse:
    properties:
      batterySoCs:
        items:
          type: number
        type: array
      batteryVoltages:
        items:
          type: number
        type: array
      onPeakTime:
        additionalProperties:
          type: string
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryEnergyInfoResponse:
    properties:
      batteryConsumedLifetimeEnergyAC:
        type: number
      batteryConsumedLifetimeEnergyACDiff:
        type: number
      batteryLifetimeOperationCycles:
        type: number
      batteryLifetimeOperationCyclesDiff:
        type: number
      batteryPower:
        type: number
      batteryProducedLifetimeEnergyAC:
        type: number
      batteryProducedLifetimeEnergyACDiff:
        type: number
      batterySoC:
        type: number
      capcity:
        type: number
      model:
        type: string
      powerSources:
        type: string
      voltage:
        type: number
    type: object
  services.BatteryPowerStateResponse:
    properties:
      batteryAveragePowerACs:
        items:
          type: number
        type: array
      onPeakTime:
        additionalProperties:
          type: string
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryUsageInfoResponse:
    properties:
      batteryChargingFrom:
        type: string
      batteryConsumedAveragePowerAC:
        type: number
      batteryDischargingTo:
        type: string
      batteryProducedAveragePowerAC:
        type: number
      batterySoC:
        type: number
    type: object
  services.ChargeInfoResponse:
    properties:
      gridContractPowerAC:
        type: number
      gridIsPeakShaving:
        type: integer
      gridPowerCost:
        type: number
      gridPowerCostLastMonth:
        type: number
      gridPowerCostSavings:
        type: number
      gridProducedAveragePowerAC:
        type: number
    type: object
  services.DemandStateResponse:
    properties:
      gridContractPowerAC:
        type: number
      gridLifetimeEnergyACDiffToPowers:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.EnergyDistributionInfoResponse:
    properties:
      allConsumedLifetimeEnergyACDiff:
        type: number
      allProducedLifetimeEnergyACDiff:
        type: number
      batteryConsumedEnergyPercentAC:
        type: number
      batteryConsumedLifetimeEnergyACDiff:
        type: number
      batteryProducedEnergyPercentAC:
        type: number
      batteryProducedLifetimeEnergyACDiff:
        type: number
      gridConsumedEnergyPercentAC:
        type: number
      gridConsumedLifetimeEnergyACDiff:
        type: number
      gridProducedEnergyPercentAC:
        type: number
      gridProducedLifetimeEnergyACDiff:
        type: number
      loadConsumedEnergyPercentAC:
        type: number
      loadConsumedLifetimeEnergyACDiff:
        type: number
      pvProducedEnergyPercentAC:
        type: number
      pvProducedLifetimeEnergyACDiff:
        type: number
    type: object
  services.GatewayInfo:
    properties:
      address:
        type: string
      gatewayID:
        type: string
    type: object
  services.GridEnergyInfoResponse:
    properties:
      gridConsumedLifetimeEnergyACDiff:
        type: number
      gridLifetimeEnergyACDiff:
        type: number
      gridLifetimeEnergyACDiffOfMonth:
        type: number
      gridProducedLifetimeEnergyACDiff:
        type: number
    type: object
  services.GridPowerStateResponse:
    properties:
      gridAveragePowerACs:
        items:
          type: number
        type: array
      onPeakTime:
        additionalProperties:
          type: string
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.PowerSelfSupplyRateResponse:
    properties:
      loadSelfConsumedEnergyPercentACs:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.PowerStateResponse:
    properties:
      batteryAveragePowerACs:
        items:
          type: number
        type: array
      gridAveragePowerACs:
        items:
          type: number
        type: array
      loadAveragePowerACs:
        items:
          type: number
        type: array
      pvAveragePowerACs:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.ProfileResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      expirationDate:
        type: string
      gateways:
        items:
          $ref: '#/definitions/services.GatewayInfo'
        type: array
      id:
        type: integer
      lockedAt:
        type: string
      name:
        type: string
      passwordLastChanged:
        type: string
      passwordRetryCount:
        type: string
      pwdTokenExpiry:
        type: string
      resetPWDToken:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  services.SolarEnergyInfoResponse:
    properties:
      allConsumedLifetimeEnergyACDiff:
        type: number
      batteryPvConsumedEnergyPercentAC:
        type: number
      batteryPvConsumedLifetimeEnergyACDiff:
        type: number
      gridPvConsumedEnergyPercentAC:
        type: number
      gridPvConsumedLifetimeEnergyACDiff:
        type: number
      loadPvConsumedEnergyPercentAC:
        type: number
      loadPvConsumedLifetimeEnergyACDiff:
        type: number
      pvCo2SavingsSum:
        type: number
      pvEnergyCostSavingsSum:
        type: number
    type: object
  services.SolarPowerStateResponse:
    properties:
      onPeakTime:
        additionalProperties:
          type: string
        type: object
      pvAveragePowerACs:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
info:
  contact: {}
  license: {}
  title: DER-EMS API
paths:
  /{gwid}/devices/accumulated-power-state:
    get:
      description: get power state by token, gateway UUID, resolution, startTime and
        endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - day
        - month
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.AccumulatedPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show daily/monthly accumulated power state of Load/Solar/Battery/Grid
      tags:
      - analysis
  /{gwid}/devices/battery/charge-voltage-state:
    get:
      description: get battery by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryChargeVoltageStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly charge and voltage state of battery
      tags:
      - energy resources
  /{gwid}/devices/battery/energy-info:
    get:
      description: get battery by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about battery
      tags:
      - energy resources
  /{gwid}/devices/battery/power-state:
    get:
      description: get battery by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of battery
      tags:
      - energy resources
  /{gwid}/devices/battery/usage-info:
    get:
      description: get battery by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryUsageInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show current usage state about battery
      tags:
      - time of use
  /{gwid}/devices/charge-info:
    get:
      description: get demand charge information by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.ChargeInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the demand charge information
      tags:
      - demand charge
  /{gwid}/devices/demand-state:
    get:
      description: get demand details by token, gateway UUID, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.DemandStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's demand details
      tags:
      - demand charge
  /{gwid}/devices/energy-distribution-info:
    get:
      description: get energy distribution by token, gateway UUID, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.EnergyDistributionInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the distribution of energy sources and distinations
      tags:
      - analysis
  /{gwid}/devices/grid/energy-info:
    get:
      description: get grid by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GridEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about grid
      tags:
      - energy resources
  /{gwid}/devices/grid/power-state:
    get:
      description: get grid by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GridPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of grid
      tags:
      - energy resources
  /{gwid}/devices/power-self-supply-rate:
    get:
      description: get power self supply rate by token, gateway UUID, resolution,
        startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - day
        - month
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.PowerSelfSupplyRateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show daily/monthly power self supply rate
      tags:
      - analysis
  /{gwid}/devices/power-state:
    get:
      description: get power state by token, gateway UUID, resolution, startTime and
        endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.PowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of Load/Solar/Battery/Grid
      tags:
      - analysis
  /{gwid}/devices/solar/energy-info:
    get:
      description: get solar by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.SolarEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about solar
      tags:
      - energy resources
  /{gwid}/devices/solar/power-state:
    get:
      description: get solar by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.SolarPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of solar
      tags:
      - energy resources
  /auth:
    post:
      consumes:
      - application/json
      description: get token by username and password
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Show a token
      tags:
      - authorization
  /user/PasswordResetByToken:
    put:
      consumes:
      - application/json
      description: set a new password by having the token from email
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Reset the password
      tags:
      - user
  /user/passwordLost:
    put:
      consumes:
      - application/json
      description: get email by username
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Send an email for reset the password
      tags:
      - user
  /user/profile:
    get:
      description: get user by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.ProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information about an individual user
      tags:
      - user
swagger: "2.0"
