basePath: /api
definitions:
  app.PeriodQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - startTime
    type: object
  app.ResolutionWithPeriodQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      resolution:
        enum:
        - day
        - month
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - resolution
    - startTime
    type: object
  app.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  app.StartTimeQuery:
    properties:
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - startTime
    type: object
  app.ZoomableQuery:
    properties:
      endTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
      resolution:
        enum:
        - hour
        - 5minute
        type: string
      startTime:
        example: UTC time in ISO-8601
        format: date-time
        type: string
    required:
    - endTime
    - resolution
    - startTime
    type: object
  repository.FieldGroupWrap:
    properties:
      check:
        type: boolean
      id:
        type: integer
      name:
        type: string
      parentID:
        type: string
    type: object
  repository.UserWrap:
    properties:
      groupID:
        type: integer
      groupName:
        type: string
      groupParentID:
        type: string
      groupParentName:
        type: string
      id:
        type: integer
      lockedAt:
        type: string
      name:
        type: string
      username:
        type: string
    type: object
  services.AccumulatedPowerStateResponse:
    properties:
      batteryLifetimeEnergyACDiffs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      gridLifetimeEnergyACDiffs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      loadConsumedLifetimeEnergyACDiffs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      pvProducedLifetimeEnergyACDiffs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryChargeVoltageStateResponse:
    properties:
      batterySoCs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      batteryVoltages:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timeOfUse:
        additionalProperties: true
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryEnergyInfoResponse:
    properties:
      batteryConsumedLifetimeEnergyAC:
        type: number
      batteryConsumedLifetimeEnergyACDiff:
        type: number
      batteryLifetimeOperationCycles:
        type: number
      batteryLifetimeOperationCyclesDiff:
        type: number
      batteryPower:
        type: number
      batteryProducedLifetimeEnergyAC:
        type: number
      batteryProducedLifetimeEnergyACDiff:
        type: number
      batterySoC:
        type: number
      capcity:
        type: number
      model:
        type: string
      powerSources:
        type: string
      voltage:
        type: number
    type: object
  services.BatteryPowerStateResponse:
    properties:
      batteryAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timeOfUse:
        additionalProperties: true
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.BatteryUsageInfoResponse:
    properties:
      batteryChargingFrom:
        type: string
      batteryConsumedAveragePowerAC:
        type: number
      batteryDischargingTo:
        type: string
      batteryProducedAveragePowerAC:
        type: number
      batterySoC:
        type: number
    type: object
  services.ChargeInfoResponse:
    properties:
      gridContractPowerAC:
        type: number
      gridIsPeakShaving:
        type: integer
      gridPowerCost:
        type: number
      gridPowerCostLastMonth:
        type: number
      gridPowerCostSavings:
        type: number
      gridProducedAveragePowerAC:
        type: number
    type: object
  services.DemandStateResponse:
    properties:
      gridContractPowerAC:
        type: number
      gridLifetimeEnergyACDiffToPowers:
        items:
          type: number
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.DeviceInfo:
    properties:
      extraInfo:
        type: string
      modbusID:
        type: integer
      modelID:
        type: integer
      powerCapacity:
        type: number
      subDevices:
        items:
          $ref: '#/definitions/services.SubDeviceInfo'
        type: array
      uueID:
        type: string
    type: object
  services.DeviceModelInfo:
    properties:
      id:
        type: integer
      name:
        type: string
      type:
        type: string
    type: object
  services.EnergyCostsDailyInfo:
    properties:
      postUbiikLastMonth:
        items:
          type: integer
        type: array
      postUbiikTheSameMonthLastYear:
        items:
          type: integer
        type: array
      postUbiikThisMonth:
        items:
          type: integer
        type: array
      preUbiikLastMonth:
        items:
          type: integer
        type: array
      preUbiikTheSameMonthLastYear:
        items:
          type: integer
        type: array
      preUbiikThisMonth:
        items:
          type: integer
        type: array
      savedLastMonth:
        items:
          type: integer
        type: array
      savedTheSameMonthLastYear:
        items:
          type: integer
        type: array
      savedThisMonth:
        items:
          type: integer
        type: array
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.EnergyCostsInfo:
    properties:
      postUbiikLastMonth:
        type: integer
      postUbiikTheSameMonthLastYear:
        type: integer
      postUbiikThisMonth:
        type: integer
      preUbiikLastMonth:
        type: integer
      preUbiikTheSameMonthLastYear:
        type: integer
      preUbiikThisMonth:
        type: integer
    type: object
  services.EnergyDistributionInfoResponse:
    properties:
      allConsumedLifetimeEnergyACDiff:
        type: number
      allProducedLifetimeEnergyACDiff:
        type: number
      batteryConsumedEnergyPercentAC:
        type: number
      batteryConsumedLifetimeEnergyACDiff:
        type: number
      batteryProducedEnergyPercentAC:
        type: number
      batteryProducedLifetimeEnergyACDiff:
        type: number
      gridConsumedEnergyPercentAC:
        type: number
      gridConsumedLifetimeEnergyACDiff:
        type: number
      gridProducedEnergyPercentAC:
        type: number
      gridProducedLifetimeEnergyACDiff:
        type: number
      loadConsumedEnergyPercentAC:
        type: number
      loadConsumedLifetimeEnergyACDiff:
        type: number
      pvProducedEnergyPercentAC:
        type: number
      pvProducedLifetimeEnergyACDiff:
        type: number
    type: object
  services.Float32ArrayFormat:
    items:
      type: number
    type: array
  services.GatewayInfo:
    properties:
      gatewayID:
        type: string
      permissions:
        items:
          $ref: '#/definitions/services.GatewayPermissionInfo'
        type: array
    type: object
  services.GatewayPermissionInfo:
    properties:
      disabledAt:
        type: string
      disabledBy:
        type: string
      enabledAt:
        type: string
      enabledBy:
        type: string
      location:
        $ref: '#/definitions/services.LocationInfo'
        type: object
    type: object
  services.GetBatterySettingsResponse:
    properties:
      chargingSources:
        type: string
      reservedForGridOutagePercent:
        type: integer
    type: object
  services.GetDeviceModelsResponse:
    properties:
      models:
        items:
          $ref: '#/definitions/services.DeviceModelInfo'
        type: array
    type: object
  services.GetFieldResponse:
    properties:
      address:
        type: string
      devices:
        items:
          $ref: '#/definitions/services.DeviceInfo'
        type: array
      enable:
        type: boolean
      gatewayID:
        type: string
      groups:
        items:
          $ref: '#/definitions/repository.FieldGroupWrap'
        type: array
      lat:
        type: number
      lng:
        type: number
      locationName:
        type: string
      powerCompany:
        type: string
      touType:
        type: string
      voltageType:
        type: string
    type: object
  services.GetFieldsResponse:
    properties:
      gateways:
        items:
          $ref: '#/definitions/services.GroupGatewayInfo'
        type: array
    type: object
  services.GetGroupInfo:
    properties:
      id:
        type: integer
      name:
        type: string
      parentID:
        type: string
      typeID:
        type: integer
    type: object
  services.GetGroupResponse:
    properties:
      gateways:
        items:
          $ref: '#/definitions/services.GroupGatewayInfo'
        type: array
      name:
        type: string
      parentID:
        type: string
      typeID:
        type: integer
    type: object
  services.GetGroupTypeInfo:
    properties:
      id:
        type: integer
      name:
        type: string
    type: object
  services.GetGroupsResponse:
    properties:
      groupTypes:
        items:
          $ref: '#/definitions/services.GetGroupTypeInfo'
        type: array
      groups:
        items:
          $ref: '#/definitions/services.GetGroupInfo'
        type: array
    type: object
  services.GetMeterSettingsResponse:
    properties:
      maxDemandCapacity:
        type: integer
    type: object
  services.GetPowerOutagePeriodsResponse:
    properties:
      periods:
        items:
          $ref: '#/definitions/services.PowerOutagePeriodInfo'
        type: array
    type: object
  services.GetUsersResponse:
    properties:
      users:
        items:
          $ref: '#/definitions/repository.UserWrap'
        type: array
    type: object
  services.GridEnergyInfoResponse:
    properties:
      gridConsumedLifetimeEnergyACDiff:
        type: number
      gridLifetimeEnergyACDiff:
        type: number
      gridLifetimeEnergyACDiffOfMonth:
        type: number
      gridProducedLifetimeEnergyACDiff:
        type: number
    type: object
  services.GridPowerStateResponse:
    properties:
      gridAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timeOfUse:
        additionalProperties: true
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.GroupGatewayInfo:
    properties:
      gatewayID:
        type: string
      locationName:
        type: string
    type: object
  services.GroupInfo:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      deletedBy:
        type: string
      gateways:
        items:
          $ref: '#/definitions/services.GatewayInfo'
        type: array
      id:
        type: integer
      name:
        type: string
      parentID:
        type: string
      typeID:
        type: integer
      updatedAt:
        type: string
      webpages:
        items:
          $ref: '#/definitions/services.WebpageInfo'
        type: array
    type: object
  services.LocationInfo:
    properties:
      address:
        type: string
      name:
        type: string
    type: object
  services.PowerOutagePeriodInfo:
    properties:
      endTime:
        type: string
      id:
        type: integer
      ongoing:
        type: boolean
      startTime:
        type: string
      type:
        type: string
    type: object
  services.PowerSelfSupplyRateResponse:
    properties:
      loadSelfConsumedEnergyPercentACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.PowerStateResponse:
    properties:
      batteryAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      gridAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      loadAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      pvAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.ProfileResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      deletedBy:
        type: string
      expirationDate:
        type: string
      group:
        $ref: '#/definitions/services.GroupInfo'
        type: object
      groupID:
        type: integer
      id:
        type: integer
      lockedAt:
        type: string
      name:
        type: string
      passwordLastChanged:
        type: string
      passwordRetryCount:
        type: string
      pwdTokenExpiry:
        type: string
      resetPWDToken:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
  services.SolarEnergyInfoResponse:
    properties:
      batteryPvConsumedEnergyPercentAC:
        type: number
      batteryPvConsumedLifetimeEnergyACDiff:
        type: number
      gridPvConsumedEnergyPercentAC:
        type: number
      gridPvConsumedLifetimeEnergyACDiff:
        type: number
      loadPvConsumedEnergyPercentAC:
        type: number
      loadPvConsumedLifetimeEnergyACDiff:
        type: number
      pvCo2SavingsSum:
        type: number
      pvEnergyCostSavingsSum:
        type: integer
      pvProducedLifetimeEnergyACDiff:
        type: number
    type: object
  services.SolarEnergyUsageResponse:
    properties:
      loadPvConsumedEnergyPercentACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.SolarPowerStateResponse:
    properties:
      pvAveragePowerACs:
        $ref: '#/definitions/services.Float32ArrayFormat'
        type: object
      timeOfUse:
        additionalProperties: true
        type: object
      timestamps:
        items:
          type: integer
        type: array
    type: object
  services.SubDeviceInfo:
    properties:
      extraInfo:
        type: string
      modelID:
        type: integer
      powerCapacity:
        type: number
    type: object
  services.TimeOfUseEnergyCostResponse:
    properties:
      energyCosts:
        $ref: '#/definitions/services.EnergyCostsInfo'
        type: object
      energyDailyCosts:
        $ref: '#/definitions/services.EnergyCostsDailyInfo'
        type: object
    type: object
  services.TimeOfUseInfoResponse:
    properties:
      energySources:
        additionalProperties: true
        type: object
      timeOfUse:
        additionalProperties: true
        type: object
    type: object
  services.WebpageInfo:
    properties:
      id:
        type: integer
      name:
        type: string
      permissions:
        $ref: '#/definitions/services.WebpagePermissionsInfo'
        type: object
    type: object
  services.WebpagePermissionsInfo:
    properties:
      create:
        type: boolean
      delete:
        type: boolean
      read:
        type: boolean
      update:
        type: boolean
    type: object
info:
  contact: {}
  license: {}
  title: DER-EMS API
paths:
  /{gwid}/devices/accumulated-power-state:
    get:
      description: get power state by token, gateway UUID, resolution, startTime and
        endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - day
        - month
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.AccumulatedPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show daily/monthly accumulated power state of Load/Solar/Battery/Grid
      tags:
      - analysis
  /{gwid}/devices/battery/charge-voltage-state:
    get:
      description: get battery by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryChargeVoltageStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly charge and voltage state of battery
      tags:
      - energy resources
  /{gwid}/devices/battery/energy-info:
    get:
      description: get battery by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about battery
      tags:
      - energy resources
  /{gwid}/devices/battery/power-state:
    get:
      description: get battery by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of battery
      tags:
      - energy resources
  /{gwid}/devices/battery/usage-info:
    get:
      description: get battery by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.BatteryUsageInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show current usage state about battery
      tags:
      - time of use
  /{gwid}/devices/charge-info:
    get:
      description: get demand charge information by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.ChargeInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the demand charge information
      tags:
      - demand charge
  /{gwid}/devices/demand-state:
    get:
      description: get demand details by token, gateway UUID, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.DemandStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's demand details
      tags:
      - demand charge
  /{gwid}/devices/energy-distribution-info:
    get:
      description: get energy distribution by token, gateway UUID, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.EnergyDistributionInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the distribution of energy sources and distinations
      tags:
      - analysis
  /{gwid}/devices/grid/energy-info:
    get:
      description: get grid by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GridEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about grid
      tags:
      - energy resources
  /{gwid}/devices/grid/power-state:
    get:
      description: get grid by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GridPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of grid
      tags:
      - energy resources
  /{gwid}/devices/power-self-supply-rate:
    get:
      description: get power self supply rate by token, gateway UUID, resolution,
        startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - day
        - month
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.PowerSelfSupplyRateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show daily/monthly power self supply rate
      tags:
      - analysis
  /{gwid}/devices/power-state:
    get:
      description: get power state by token, gateway UUID, resolution, startTime and
        endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.PowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of Load/Solar/Battery/Grid
      tags:
      - analysis
  /{gwid}/devices/solar/energy-info:
    get:
      description: get solar by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.SolarEnergyInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about solar
      tags:
      - energy resources
  /{gwid}/devices/solar/energy-usage:
    get:
      description: get solar by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.SolarEnergyUsageResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the day's hourly energy usage of solar
      tags:
      - time of use
  /{gwid}/devices/solar/power-state:
    get:
      description: get solar by token, gateway UUID, resolution, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - enum:
        - hour
        - 5minute
        in: query
        name: resolution
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.SolarPowerStateResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show today's hourly power state of solar
      tags:
      - energy resources
  /{gwid}/devices/tou/energy-cost:
    get:
      description: get energy cost by token, gateway UUID, startTime and endTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: endTime
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.TimeOfUseEnergyCostResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show energy cost of Pre-Ubiik and Post-Ubiik
      tags:
      - economics
  /{gwid}/devices/tou/info:
    get:
      description: get energy source distribution by token, gateway UUID, startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - example: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.TimeOfUseInfoResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the distribution of energy sources for peak types of the day
      tags:
      - time of use
  /account-management/groups:
    get:
      description: list groups based on token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetGroupsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: List groups
      tags:
      - account management group
    post:
      consumes:
      - application/json
      description: create a group by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: TypeID
        in: body
        name: typeID
        required: true
        schema:
          type: integer
      - description: ParentID
        in: body
        name: parentID
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a group
      tags:
      - account management group
  /account-management/groups/{groupid}:
    delete:
      description: delete a group by token and group id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Group ID
        in: path
        name: groupid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a group
      tags:
      - account management group
    get:
      description: get a group by token and group id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Group ID
        in: path
        name: groupid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetGroupResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show a group
      tags:
      - account management group
    put:
      consumes:
      - application/json
      description: update a group by token and group id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Group ID
        in: path
        name: groupid
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a group
      tags:
      - account management group
  /account-management/users:
    get:
      description: list users based on token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetUsersResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: List users
      tags:
      - account management user
    post:
      consumes:
      - application/json
      description: create a user by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: GroupID
        in: body
        name: groupID
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Create a user
      tags:
      - account management user
  /account-management/users/{userid}:
    delete:
      description: delete a user by token and user id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a user
      tags:
      - account management user
    put:
      consumes:
      - application/json
      description: update a user by token and user id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: User ID
        in: path
        name: userid
        required: true
        type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      - description: GroupID
        in: body
        name: groupID
        required: true
        schema:
          type: integer
      - description: Unlock
        in: body
        name: unlock
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a user
      tags:
      - account management user
  /auth:
    post:
      consumes:
      - application/json
      description: get token by username and password
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Show a token
      tags:
      - authorization
  /device-management/devices/models:
    get:
      description: list device models based on token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetDeviceModelsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: List device models
      tags:
      - field management
  /device-management/gateways:
    get:
      description: list fields based on token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetFieldsResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: List fields
      tags:
      - field management
  /device-management/gateways/{gwid}:
    get:
      description: get a field by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetFieldResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show a field
      tags:
      - field management
  /device-management/gateways/{gwid}/account-groups:
    put:
      consumes:
      - application/json
      description: update a field groups by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - description: Groups
        in: body
        name: groups
        required: true
        schema:
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update a field groups
      tags:
      - field management
  /device-management/gateways/{gwid}/battery-settings:
    get:
      description: get battery settings by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetBatterySettingsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show battery settings
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: update battery settings by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - description: Charging sources
        in: body
        name: chargingSources
        required: true
        schema:
          type: string
      - description: Reserved for grid outage percent
        in: body
        name: reservedForGridOutagePercent
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update battery settings
      tags:
      - settings
  /device-management/gateways/{gwid}/field-state:
    put:
      consumes:
      - application/json
      description: enable/disable a field by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - description: Enable
        in: body
        name: enable
        required: true
        schema:
          type: boolean
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Enable/Disable a field
      tags:
      - field management
  /device-management/gateways/{gwid}/meter-settings:
    get:
      description: get meter settings by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetMeterSettingsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show maximum demand capacity
      tags:
      - settings
    put:
      consumes:
      - application/json
      description: update meter settings by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - description: Maximum demand capacity
        in: body
        name: maxDemandCapacity
        required: true
        schema:
          type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update maximum demand capacity
      tags:
      - settings
  /device-management/gateways/{gwid}/power-outage-periods:
    get:
      description: get power outage periods by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.GetPowerOutagePeriodsResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show power outage periods
      tags:
      - settings
    post:
      consumes:
      - application/json
      description: create power outage periods by token and gateway UUID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Periods
        in: body
        name: periods
        required: true
        schema:
          type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Create power outage periods
      tags:
      - settings
  /device-management/gateways/{gwid}/power-outage-periods/{periodid}:
    delete:
      description: delete a power outage period by token, gateway UUID and period
        ID
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Period ID
        in: path
        name: periodid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Delete a power outage period
      tags:
      - settings
  /device-management/gateways/{gwid}/sync-device-settings:
    get:
      description: sync a field device settings by token and gateway id
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "403":
          description: Forbidden
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Sync device settings
      tags:
      - field management
  /user/PasswordResetByToken:
    put:
      consumes:
      - application/json
      description: set a new password by having the token from email
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Reset the password
      tags:
      - user
  /user/passwordLost:
    put:
      consumes:
      - application/json
      description: get email by username
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Send an email for reset the password
      tags:
      - user
  /user/profile:
    get:
      description: get user by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.ProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information about an individual user
      tags:
      - user
  /users/name:
    put:
      consumes:
      - application/json
      description: update user's name by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Name
        in: body
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update the display name about an individual user
      tags:
      - user
  /users/password:
    put:
      consumes:
      - application/json
      description: update user's password by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Update the password about an individual user
      tags:
      - user
swagger: "2.0"
