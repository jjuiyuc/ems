basePath: /api
definitions:
  app.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      msg:
        type: string
    type: object
  services.BatteryEnergyInfoResponse:
    properties:
      batteryConsumedEnergyAC:
        type: number
      batteryConsumedLifetimeEnergyAC:
        type: number
      batteryLifetimeOperationCycles:
        type: number
      batteryOperationCycles:
        type: number
      batteryPower:
        type: number
      batteryProducedEnergyAC:
        type: number
      batteryProducedLifetimeEnergyAC:
        type: number
      batterySoC:
        type: number
      capcity:
        type: number
      model:
        type: string
      powerSources:
        type: string
      voltage:
        type: number
    type: object
  services.GatewayInfo:
    properties:
      address:
        type: string
      gatewayID:
        type: string
    type: object
  services.ProfileResponse:
    properties:
      createdAt:
        type: string
      deletedAt:
        type: string
      expirationDate:
        type: string
      gateways:
        items:
          $ref: '#/definitions/services.GatewayInfo'
        type: array
      id:
        type: integer
      lockedAt:
        type: string
      name:
        type: string
      passwordLastChanged:
        type: string
      passwordRetryCount:
        type: string
      pwdTokenExpiry:
        type: string
      resetPWDToken:
        type: string
      updatedAt:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  license: {}
  title: DER-EMS API
paths:
  /{gwid}/devices/battery/energy-info:
    get:
      description: get battery by token, gateway UUID and startTime
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      - description: Gateway UUID
        in: path
        name: gwid
        required: true
        type: string
      - description: UTC time in ISO-8601
        format: date-time
        in: query
        name: startTime
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information and current state about a battery
      tags:
      - energy resources
  /{gwid}/devices/battery/power-state:
    get:
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Provide today's hourly power state of a battery
      tags:
      - Energy Resources
  /auth:
    post:
      consumes:
      - application/json
      description: get token by username and password
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      summary: Show a token
      tags:
      - authorization
  /user/PasswordResetByToken:
    put:
      consumes:
      - application/json
      description: set a new password by having the token from email
      parameters:
      - description: Token
        in: body
        name: token
        required: true
        schema:
          type: string
      - description: New password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Reset the password
      tags:
      - user
  /user/passwordLost:
    put:
      consumes:
      - application/json
      description: get email by username
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/app.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/app.Response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
      summary: Send an email for reset the password
      tags:
      - user
  /user/profile:
    get:
      description: get user by token
      parameters:
      - default: Bearer <Add access token here>
        description: Input user's access token
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            allOf:
            - $ref: '#/definitions/app.Response'
            - properties:
                data:
                  $ref: '#/definitions/services.ProfileResponse'
              type: object
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/app.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/app.Response'
      security:
      - ApiKeyAuth: []
      summary: Show the detailed information about an individual user
      tags:
      - user
swagger: "2.0"
